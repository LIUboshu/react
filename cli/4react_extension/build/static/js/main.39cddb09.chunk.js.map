{"version":3,"sources":["component/8ErrorBoundary/Child.jsx","component/8ErrorBoundary/Parent.jsx","App.js","index.js"],"names":["Child","state","users","this","map","userObj","name","age","id","Component","Parent","hasError","console","log","error","App","ReactDOM","render","document","getElementById"],"mappings":"0LAEqBA,E,4MASjBC,MAAQ,CACJC,MAAM,4B,4CAEV,WACI,OACI,gCACI,+DAEIC,KAAKF,MAAMC,MAAME,KAAI,SAAAC,GACjB,OAAO,+BAAsBA,EAAQC,KAA9B,MAAuCD,EAAQE,MAAtCF,EAAQG,c,GAlBbC,aCCdC,E,4MACjBT,MAAQ,CACJU,SAAS,I,uDAUb,WAEIC,QAAQC,IAAI,iK,oBAEhB,WACI,OACI,gCACI,gEACCV,KAAKF,MAAMU,SAAW,wGAA2B,cAAC,EAAD,U,uCAd9D,SAAgCG,GAE5B,OADAF,QAAQC,IAAIC,GACL,CACHH,SAAUG,O,GATcL,aCOfM,E,4JACnB,WACE,OACE,8BAEE,cAAC,EAAD,U,GALyBN,a,OCLjCO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.39cddb09.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Child extends Component {\r\n    /* state = {\r\n        users:[\r\n            {id:'001',name:'Tom',age:18},\r\n            {id:'002',name:'Jack',age:19},\r\n            {id:'003',name:'peiqi',age:20}\r\n        ]\r\n    } */\r\n\r\n    state = {\r\n        users:'演示错误'\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我只Child组件</h2>\r\n                {\r\n                    this.state.users.map(userObj=>{\r\n                        return <h4 key={userObj.id}>{userObj.name}---{userObj.age}</h4>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Child from \"./Child\";\r\n\r\nexport default class Parent extends Component {\r\n    state = {\r\n        hasError:''// 用于标识子组件是否产生错误\r\n    }\r\n    // !!!!!!!!!!!!!!错误边界 只能在线上环境产生效果!!!!!!!!!!!!!!\r\n    // 如果Parent组件的子组件出现了任何报错都会调用getDerivedStateFromError这个钩子,并携带错误信息\r\n    static getDerivedStateFromError(error){\r\n        console.log(error)\r\n        return {\r\n            hasError: error\r\n        }\r\n    }\r\n    componentDidCatch() {\r\n        // 统计页面的错误。发送请求发送到后台去\r\n        console.log('此处统计错误,反馈给服务器,用于通知编码人员进行bug的解决');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Parent组件</h2>\r\n                {this.state.hasError ? <h2>当前网络不稳定,稍后再试...</h2> : <Child />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/* \r\n    !!!!!!!!!!!!!!错误边界 只能在线上环境产生效果!!!!!!!!!!!!!!\r\n    错误边界(Error boundary)：用来捕获后代组件错误，渲染出备用页面\r\n    只能捕获后代组件生命周期产生的错误，不能捕获自己组件产生的错误和其他组件在合成事件、定时器中产生的错误\r\n    getDerivedStateFromError配合componentDidCatch\r\n        // 生命周期函数，一旦后台组件报错，就会触发\r\n        static getDerivedStateFromError(error) {\r\n            console.log(error);\r\n            // 在render之前触发\r\n            // 返回新的state\r\n            return {\r\n                hasError: true,\r\n            };\r\n        }\r\n\r\n        componentDidCatch(error, info) {\r\n            // 统计页面的错误。发送请求发送到后台去\r\n            console.log(error, info);\r\n        }\r\n*/","import React, { Component } from 'react'\n// import Count from \"./component/1setState\";\n// import  Demo  from \"./component/2lazyLoad\";\n// import  Demo  from \"./component/3hooks\";\n// import  Demo  from \"./component/4Fragment\";\n// import  Demo  from \"./component/5context\";\n// import  Demo  from \"./component/6optimize\";\n// import  Demo  from \"./component/7renderprops\";\nimport  Demo  from \"./component/8ErrorBoundary/Parent\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <Count s={\"张三\"}/> */}\n        <Demo/>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}